/*!
 * jQuery Transit - CSS3 transitions and transformations
 * Copyright(c) 2011 Rico Sta. Cruz <rico@ricostacruz.com>
 * MIT Licensed.
 *
 * http://ricostacruz.com/jquery.transit
 * http://github.com/rstacruz/jquery.transit
 *
 * Reviewed by Simon SER to work with jQuery 1.8.2.
 */
(function(a){function d(a){var c=["Moz","Webkit","O","ms"];var d=a.charAt(0).toUpperCase()+a.substr(1);if(a in b.style){return a}for(var e=0;e<c.length;++e){var f=c[e]+d;if(f in b.style){return f}}}function e(){b.style[c.transform]="";b.style[c.transform]="rotateY(90deg)";return b.style[c.transform]!==""}function i(a){if(typeof a==="string"){this.parse(a)}return this}function j(a,b,c){if(b===true){a.queue(c)}else if(b){a.queue(b,c)}else{c()}}function k(b){var c=[];a.each(b,function(b){b=a.camelCase(b);b=a.transit.propertyMap[b]||b;b=n(b);if(a.inArray(b,c)===-1){c.push(b)}});return c}function l(b,c,d,e){var f=k(b);if(a.cssEase[d]){d=a.cssEase[d]}var g=""+p(c)+" "+d;if(parseInt(e,10)>0){g+=" "+p(e)}var h=[];a.each(f,function(a,b){h.push(b+" "+g)});return h.join(", ")}function m(b,d){if(!d){a.cssNumber[b]=true}a.transit.propertyMap[b]=c.transform;a.cssHooks[b]={get:function(c){var d=a(c).css("transform")&&a(c).css("transform")!="none"?a(c).css("transform"):new i;return d.get(b)},set:function(c,d){var e=a(c).css("transform")&&a(c).css("transform")!="none"?a(c).css("transform"):new i;e.setFromString(b,d);a(c).css({transform:e})}}}function n(a){return a.replace(/([A-Z])/g,function(a){return"-"+a.toLowerCase()})}function o(a,b){if(typeof a==="string"&&!a.match(/^[\-0-9\.]+$/)){return a}else{return""+a+b}}function p(b){var c=b;if(a.fx.speeds[c]){c=a.fx.speeds[c]}return o(c,"ms")}"use strict";a.transit={version:"0.1.3",propertyMap:{marginLeft:"margin",marginRight:"margin",marginBottom:"margin",marginTop:"margin",paddingLeft:"padding",paddingRight:"padding",paddingBottom:"padding",paddingTop:"padding"},enabled:true,useTransitionEnd:false};var b=document.createElement("div");var c={};var f=navigator.userAgent.toLowerCase().indexOf("chrome")>-1;c.transition=d("transition");c.transitionDelay=d("transitionDelay");c.transform=d("transform");c.transformOrigin=d("transformOrigin");c.transform3d=e();a.extend(a.support,c);var g={MozTransition:"transitionend",OTransition:"oTransitionEnd",WebkitTransition:"webkitTransitionEnd",msTransition:"MSTransitionEnd"};var h=c.transitionEnd=g[c.transition]||null;b=null;a.cssEase={_default:"ease","in":"ease-in",out:"ease-out","in-out":"ease-in-out",snap:"cubic-bezier(0,1,.5,1)"};a.cssHooks.transform={get:function(b){return a(b).data("transform")},set:function(b,d){var e=d;if(!(e instanceof i)){e=new i(e)}if(c.transform==="WebkitTransform"&&!f){b.style[c.transform]=e.toString(true)}else{b.style[c.transform]=e.toString()}a(b).data("transform",e)}};a.cssHooks.transformOrigin={get:function(a){return a.style[c.transformOrigin]},set:function(a,b){a.style[c.transformOrigin]=b}};a.cssHooks.transition={get:function(a){return a.style[c.transition]},set:function(a,b){a.style[c.transition]=b}};m("scale");m("translate");m("rotate");m("rotateX");m("rotateY");m("rotate3d");m("perspective");m("skewX");m("skewY");m("x",true);m("y",true);i.prototype={setFromString:function(a,b){var c=typeof b==="string"?b.split(","):b.constructor===Array?b:[b];c.unshift(a);i.prototype.set.apply(this,c)},set:function(a){var b=Array.prototype.slice.apply(arguments,[1]);if(this.setter[a]){this.setter[a].apply(this,b)}else{this[a]=b.join(",")}},get:function(a){if(this.getter[a]){return this.getter[a].apply(this)}else{return this[a]||0}},setter:{rotate:function(a){this.rotate=o(a,"deg")},rotateX:function(a){this.rotateX=o(a,"deg")},rotateY:function(a){this.rotateY=o(a,"deg")},scale:function(a,b){if(b===undefined){b=a}this.scale=a+","+b},skewX:function(a){this.skewX=o(a,"deg")},skewY:function(a){this.skewY=o(a,"deg")},perspective:function(a){this.perspective=o(a,"px")},x:function(a){this.set("translate",a,null)},y:function(a){this.set("translate",null,a)},translate:function(a,b){if(this._translateX===undefined){this._translateX=0}if(this._translateY===undefined){this._translateY=0}if(a!==null){this._translateX=o(a,"px")}if(b!==null){this._translateY=o(b,"px")}this.translate=this._translateX+","+this._translateY}},getter:{x:function(){return this._translateX||0},y:function(){return this._translateY||0},scale:function(){var a=(this.scale||"1,1").split(",");if(a[0]){a[0]=parseFloat(a[0])}if(a[1]){a[1]=parseFloat(a[1])}return a[0]===a[1]?a[0]:a},rotate3d:function(){var a=(this.rotate3d||"0,0,0,0deg").split(",");for(var b=0;b<=3;++b){if(a[b]){a[b]=parseFloat(a[b])}}if(a[3]){a[3]=o(a[3],"deg")}return a}},parse:function(a){var b=this;a.replace(/([a-zA-Z0-9]+)\((.*?)\)/g,function(a,c,d){b.setFromString(c,d)})},toString:function(a){var b=[];for(var d in this){if(this.hasOwnProperty(d)){if(!c.transform3d&&(d==="rotateX"||d==="rotateY"||d==="perspective"||d==="transformOrigin")){continue}if(d[0]!=="_"){if(a&&d==="scale"){b.push(d+"3d("+this[d]+",1)")}else if(a&&d==="translate"){b.push(d+"3d("+this[d]+",0)")}else{b.push(d+"("+this[d]+")")}}}}return b.join(" ")}};a.fn.transition=a.fn.transit=function(b,d,e,f){var g=this;var i=0;var k=true;if(typeof d==="function"){f=d;d=undefined}if(typeof e==="function"){f=e;e=undefined}if(typeof b.easing!=="undefined"){e=b.easing;delete b.easing}if(typeof b.duration!=="undefined"){d=b.duration;delete b.duration}if(typeof b.complete!=="undefined"){f=b.complete;delete b.complete}if(typeof b.queue!=="undefined"){k=b.queue;delete b.queue}if(typeof b.delay!=="undefined"){i=b.delay;delete b.delay}if(typeof d==="undefined"){d=a.fx.speeds._default}if(typeof e==="undefined"){e=a.cssEase._default}d=p(d);var m=l(b,d,e,i);var n=a.transit.enabled&&c.transition;var o=n?parseInt(d,10)+parseInt(i,10):0;if(o===0){var q=function(a){g.css(b);if(f){f.apply(g)}if(a){a()}};j(g,k,q);return g}var r={};var s=function(d){var e=false;var i=function(){if(e){g.unbind(h,i)}if(o>0){g.each(function(){this.style[c.transition]=r[this]||null})}if(typeof f==="function"){f.apply(g)}if(typeof d==="function"){d()}};if(o>0&&h&&a.transit.useTransitionEnd){e=true;g.bind(h,i)}else{window.setTimeout(i,o)}g.each(function(){if(o>0){this.style[c.transition]=m}a(this).css(b)})};var t=function(a){var b=0;if(c.transition==="MozTransition"&&b<25){b=25}window.setTimeout(function(){s(a)},b)};j(g,k,t);return this};a.transit.getTransitionValue=l})(jQuery)

/**
 * (The MIT License)
 *
 * Copyright (c) 2012 Aleksandar Kolundzija (a@ak.rs)
 *
 * Permission is hereby granted, free of charge, to any person obtaining
 * a copy of this software and associated documentation files (the
 * 'Software'), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sublicense, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 *
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
 * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
 * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
 * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */
/**
 * Slideshowify is a super easy-to-use jQuery plugin for generating image slideshows 
 * with a Ken Burns Effect, where images which don't fit the screen exactly 
 * (generally the case) are cropped and either panned across the screen or 
 * zoomed in a randomly determined direction.
 * 
 * Author: Aleksandar Kolundzija 
 * version 0.9.3
 *
 * @requires jquery
 * @requires jquery.transit (http://ricostacruz.com/jquery.transit/) as of version 0.9
 *
 * (The MIT License)
 *
 * Copyright (c) 2012 Aleksandar Kolundzija (a@ak.rs)
 *
 * Permission is hereby granted, free of charge, to any person obtaining
 * a copy of this software and associated documentation files (the
 * 'Software'), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sublicense, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 *
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
 * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
 * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
 * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

(function($){

	$.fn.slideshowify = function(/* config */){
	
		var _self         = this,
			_imgs         = [],
			_imgIndex     = -1,	
			_imgIndexNext = 0,        // for preloading next			
			_transition   = true,     // use CSS3 transitions (default might be changed during init)
			_easing       = 'in-out',
			_viewEl       = document, // filled by slideshow (used for determining dimensions)
			_containerId  = "slideshowify-" + new Date().getTime(),
			_containerCSS = {
				"position" : "absolute",
				"overflow" : "hidden",
				"z-index"  : "-2",
				"left"     : "0",
				"top"      : "0",
				"width"    : "100%",
				"height"   : "100%"
			},
			_cfg = {
				parentEl      : "body",   // slideshow-container is injected into this
				blend         : "into",   // "into" || "toBg"
				randomize     : false,
				fadeInSpeed   : 1000,
				fadeOutSpeed  : 1000,
				aniSpeedMin   : 12000, 
				aniSpeedMax   : 25000
			},
			_$viewEl,
			_$parentEl;
		

		if (arguments[0]){
			$.extend(_cfg, arguments[0]); // reconfigure
			if (_cfg.parentEl != "body") {
				_viewEl = _cfg.parentEl;
			}
		}

		// local refs
		_$viewEl   = $(_viewEl);
		_$parentEl = $(_cfg.parentEl);


		/**
		 * Fill viewEl with image (most likely cropped based on its dimensions and view size).
		 * @TODO Add support for target divs whose dimensions were set with %s (get px value from parents).
		 * @TODO Add a window resize handler (adjust photo dims/margins).
		 */
		function _revealImg(curImg){
			var $img            = $(this),
				viewW           = _$viewEl.width(),
				viewH           = _$viewEl.height(),
				viewRatio       = viewW/viewH,
				imgRatio        = ($img.width())/($img.height()),
				marginThreshold = Math.floor(Math.max(viewW, viewH)/10), // for zoom transitions
				direction       = Math.round(Math.random()),
				transAttr       = {},
				transProps,
				marginPixels,
				modDims; // will hold values to set and animate

			if (imgRatio > viewRatio){
				console.log("imgRatio er større enn viewRatio");
				modDims = _transition ? 
							direction ? {dim:'left', attr:'x', sign:'-'} : {dim:'right', attr:'x', sign:''} 
							:
							direction ? {dim:'left', attr:'left', sign:'-'} : {dim:'right', attr:'right', sign:'-'};
				$img.height(viewH + 'px').width(curImg.w * (viewH/curImg.h) + 'px');			
				marginPixels = $img.width() - viewW;
			}
			else {
				modDims = _transition ? 
							direction ? {dim:'top', attr:'y', sign:'-'} : {dim:'bottom', attr:'y', sign:''} 
							:
							direction ? {dim:'top', attr:'top', sign:'-'} : {dim:'bottom', attr:'bottom', sign:'-'};
				$img.width(viewW+'px').height(curImg.h * (viewW/curImg.w) + 'px');
				marginPixels = $img.height() - viewH;
			}
			$img.css(modDims.dim, '30');
			transAttr[modDims.attr] = modDims.sign + marginPixels + 'px'; 

			// if marginThreshold is small, zoom a little instead of panning
			if (_transition && marginPixels < marginThreshold){
				if (direction){ // zoom out 
					$img.css('scale','1.15');
					$img.css('x', Math.round(Math.random()*10)+'px');
					$img.css('y', Math.round(Math.random()*10)+'px');
					transAttr = {'scale':'1', 'x': 0, 'y': 0};
				}
				else { // zoom in
					transAttr = {'scale':'1.15', 'y': Math.round(Math.random()*10)+'px', 'x': Math.round(Math.random()*10)+'px'};
				}
			}


			transProps = {
				duration : Math.min(Math.max(marginPixels * 10, _cfg.aniSpeedMin), _cfg.aniSpeedMax),
				easing   : _easing,
				queue    : false, 
				complete : function(){
					_$parentEl.trigger('beforeFadeOut', _imgs[_imgIndex])
					setTimeout(function() {
						_$parentEl.trigger('afterFadeOut', _imgs[_imgIndex]);
					}, _cfg.fadeOutSpeed-1000);
					$img.fadeOut(_cfg.fadeOutSpeed, function(){
						$img.remove();
					});
					_loadImg();

				}
			};
			
			_$parentEl.trigger('beforeFadeIn', _imgs[_imgIndex]);
			$img.fadeIn(_cfg.fadeInSpeed, function(){
					$img.css('z-index', -1);
					_$parentEl.trigger('afterFadeIn', _imgs[_imgIndex])
				});

			// use animate if css3 transitions aren't supported
			_transition ? 
				$img.transition($.extend(transAttr, transProps)) :
				$img.animate(transAttr, transProps);
		}	// end of _revealImg()

		
		/**
		 * Loads image and starts display flow
		 */
		function _loadImg(){
			var img     = new Image(),
				nextImg = new Image(), // for preloading
				len     = _imgs.length;

			_imgIndex = (_imgIndex < len-1) ? _imgIndex+1 : 0;
		
			$(img)
				// assign handlers
				.load(function(){

					if (_cfg.blend==='into'){
						$(this).css({'position':'absolute', 'z-index':'-2'});
						$('#'+_containerId).append(this);
					}
					else { // @TODO verify that this works
						$('#'+_containerId).empty().append(this);
					}
					_revealImg.call(this, _imgs[_imgIndex]);
				})
				.error(function(){
					throw new Error("Oops, can't load the image.");
				})
				.hide()
				.attr("src", _imgs[_imgIndex].src); // load
		
			if (_imgIndexNext == len) return; // nothing left to preload

			// preload next image
			_imgIndexNext = _imgIndex + 1;
			if (_imgIndexNext < len-1){
				nextImg.src = _imgs[_imgIndexNext].src;
			}
		} // end of _loadImg()
		

		// INITIALIZE
		if (!$.support.transition) {
        	_transition = false;
        	_easing = 'swing';
      	}


    	if (!_cfg.imgs){ // images were passed as selector 
			// load images into private array
			$(this).each(function(i, img){
				$(img).hide();
				_imgs.push({
					src : $(img).attr('src'),
					w   : $(img).width(),
					h   : $(img).height(),
					title: $(img).data('title'),
					user: $(img).data('user')
				});
			});
		}
		else {
			_imgs = _cfg.imgs;
		}
	
		
		if (_cfg.randomize){ 
			_imgs.sort(function(){ return 0.5 - Math.random(); });
		}


		// create container div 
		$("<div id='"+_containerId+"'></div>")
			.css(_containerCSS)
			.appendTo(_cfg.parentEl);


		// start
		_loadImg();
		
		return this;
	};

	/**
	 * Expose slideshowify() to jQuery for use without DOM selector.
	 */ 
	$.slideshowify = function(cfg){
		var _self = this,
			_cfg  = {
				dataUrl  : "",
				dataType : "json",
				async    : true,
				filterFn : function(data){ return data; } // default filter. does nothing
			};
				
		$.extend(_cfg, cfg);
	
		$.ajax({
			url      : _cfg.dataUrl,
			dataType : _cfg.dataType,
			async    : _cfg.async,
			success  : function(imgs){
				_cfg.imgs = _cfg.filterFn(imgs);			
				$({}).slideshowify(_cfg);
			}
		});
	};

}(jQuery));



